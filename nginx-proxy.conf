server {
    listen 443 ssl;
    server_name your-dns-name.example.com;  # <-- Set to your DNS name (e.g., pypi-proxy.internal.example.com)

    ssl_certificate /etc/nginx/ssl/proxy.crt;
    ssl_certificate_key /etc/nginx/ssl/proxy.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
        # Replace the following placeholders:
        #   YOUR_CODEARTIFACT_DOMAIN: e.g., wcs-123456789012
        #   YOUR_REGION: e.g., us-west-2
        #   YOUR_REPO: e.g., pypi-store
        proxy_pass https://YOUR_CODEARTIFACT_DOMAIN.d.codeartifact.YOUR_REGION.amazonaws.com/pypi/YOUR_REPO/;

        # The token will be auto-updated by scripts/update-token.sh
        proxy_set_header Authorization "Basic YOUR_BASE64_TOKEN_PLACEHOLDER";
        proxy_set_header Host "YOUR_CODEARTIFACT_DOMAIN.d.codeartifact.YOUR_REGION.amazonaws.com";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass_request_headers on;

        proxy_ssl_server_name on;
        proxy_ssl_verify off;
        proxy_ssl_protocols TLSv1.2 TLSv1.3;
        proxy_ssl_ciphers HIGH:!aNULL:!MD5;

        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Optional: Enable caching for faster repeated downloads
        # proxy_cache codeartifact_cache;
        # proxy_cache_valid 200 302 1h;
        # proxy_cache_valid 404 1m;
    }
}

# Optional: HTTP to HTTPS redirect
server {
    listen 80;
    server_name your-dns-name.example.com;
    return 301 https://$host$request_uri;
}
